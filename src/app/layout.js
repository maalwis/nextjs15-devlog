import "./globals.css";
import React from "react";

export const metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

// ==================================================================================================
// This file implements the Root Layout for the application, a fundamental aspect of Next.js 15's design.
// In Next.js, the root layout is a required global wrapper that applies consistent UI elements (like headers,
// footers, and meta-tags) across all of your application's pages.
//
// The architecture behind layouts in Next.js emphasizes reusability and a clean separation of global versus
// page-specific content.
//
// The root layout is rendered for every page; therefore, it provides a unified structure,
// ensuring elements like navigation, branding,
// or any persistent UI component are not repeatedly redefined across pages.
//
// A key component of this layout is the "children" prop.
// In Next.js, when a page is rendered, its content is
// passed in as the children to the layout, allowing the layout component to inject its shared UI elements
// around the page-specific content.
//
// The design also permits advanced enhancements, such as integrating a global metadata object (for SEO or social
// sharing), linking stylesheets, or embedding JavaScript that must be loaded once.
// This approach not only
// simplifies development but also enhances performance by minimizing repetitive code across multiple pages.
// ==================================================================================================

// ==================================================================================================
// STYLING ARCHITECTURE
// The styling in this Root Layout follows a modern approach with:
// 1. CSS Variables: Defined at the :root level for consistent theming across the application
// 2. Fluid Typography: Using clamp() for responsive text that scales with viewport
// 3. CSS Grid & Flexbox: For powerful, responsive layouts without media queries
// 4. Animation: Subtle transitions and animations for a polished user experience
// 5. Accessibility: High contrast ratios and proper focus states for keyboard navigation
//
// This approach ensures the layout is not only visually appealing but also performant and accessible.
// ==================================================================================================

export default function RootLayout({ children }) {
    // Define styles as objects to keep the JSX clean
    // These styles could alternatively be moved to a separate CSS module for better organization
    const mainStyles = {
        minHeight: '100vh',
        display: 'grid',
        gridTemplateRows: 'auto 1fr auto',
        fontFamily: 'system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',
    };

    const headerStyles = {
        backgroundColor: '#2563eb', // Rich blue color
        color: 'white',
        padding: '1.5rem',
        boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',
        position: 'relative',
        zIndex: 10,
        borderBottom: '4px solid #1d4ed8',
    };

    const contentAreaStyles = {
        padding: '2rem',
        maxWidth: '1200px',
        margin: '0 auto',
        width: '100%',
    };

    const footerStyles = {
        backgroundColor: '#f8fafc',
        padding: '1.5rem',
        borderTop: '1px solid #e2e8f0',
        textAlign: 'center',
        color: '#64748b',
    };

    return (
        // The <html> and <head> tags are included in this component to provide global context to the document.
        // Here, the language and title are specified, and additional metadata could be added as needed.
        <html lang="en">
        <head>
            <title>Next.js 15 Layout Example</title>
            {/* This is an opportunity to define meta tags, external CSS links, or even fonts that will be loaded
            globally throughout the application. */}

            {/* Adding Google Fonts for enhanced typography */}
            <link rel="preconnect" href="https://fonts.googleapis.com" />
            <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
            <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
        </head>
        <body style={mainStyles}>
        {/* Header Section:
            The header is a persistent element that appears on every page. It offers a consistent navigation experience,
            showcases branding elements, or provides any site-wide announcements. The header's styling ensures that
            it remains visually distinct from the page content. */}
        <header style={headerStyles}>
            {/*
            The header now uses a more modern design with a rich blue background, creating a strong visual identity.
            It features increased padding, a subtle shadow for depth, and a bottom border accent for visual interest.
            This design element establishes the brand presence immediately upon page load.
            */}
            <div style={{ maxWidth: '1200px', margin: '0 auto', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                <div>
                    <h1 style={{ margin: 0, fontSize: '1.75rem', fontWeight: 700 }}>Next.js 15</h1>
                    <p style={{ margin: '0.5rem 0 0 0', fontSize: '1rem', opacity: 0.9 }}>
                        This header is part of the root layout and remains constant across all routes, demonstrating the
                        shared UI approach in Next.js.
                    </p>
                </div>

                {/* Navigation menu placeholder - could be expanded into a full component */}
                <nav>
                    <ul style={{ listStyle: 'none', display: 'flex', gap: '1.5rem', margin: 0, padding: 0 }}>
                        <li><a href="/" style={{ color: 'white', textDecoration: 'none', fontWeight: 500 }}>Home</a></li>
                        <li><a href="/about" style={{ color: 'white', textDecoration: 'none', fontWeight: 500 }}>About</a></li>
                        <li><a href="/contact" style={{ color: 'white', textDecoration: 'none', fontWeight: 500 }}>Contact</a></li>
                    </ul>
                </nav>
            </div>
        </header>

        {/* Main Content Area:
            The 'children' prop dynamically renders the unique content of each page. By sandwiching this content between
            the header and footer, Next.js ensures that every page retains the overall application structure while
            providing room for page-specific details.
            This separation of concerns between global layout and page-level content is a core feature of Next.js. */}
        <main style={contentAreaStyles}>
            {/*
            The main content area now has a maximum width and centered alignment for better readability.
            This follows a responsive design pattern, ensuring content looks good on all devices while
            preventing overly long line lengths on large screens which can harm readability.

            The children prop is rendered here, allowing page-specific content to be injected into this
            pre-defined structure. This is the essence of the layout pattern in Next.js.
            */}
            {children}
        </main>

        {/* Footer Section:
            Like the header, the footer is a static element that persists across page navigations.
            It can include information such as links to legal documents, contact information, or additional site navigation.
            The footer reinforces the consistency of the application's visual theme and user experience. */}
        <footer style={footerStyles}>
            {/*
            The footer has been redesigned with a subtle background, centered text, and a top border.
            This creates a clear visual separation from the main content while maintaining a cohesive
            design language with the rest of the application.

            In a production application, this area would typically contain copyright information,
            social media links, legal disclaimers, and secondary navigation.
            */}
            <div style={{ maxWidth: '1200px', margin: '0 auto' }}>
                <p style={{ margin: 0, fontSize: '0.875rem' }}>
                    This footer is part of the global root layout and remains in place irrespective of the current page.
                </p>
                <div style={{ marginTop: '1rem', display: 'flex', justifyContent: 'center', gap: '1rem', fontSize: '0.75rem' }}>
                    <span>© 2025 Next.js Example</span>
                    <span>•</span>
                    <a href="/privacy" style={{ color: '#64748b', textDecoration: 'none' }}>Privacy Policy</a>
                    <span>•</span>
                    <a href="/terms" style={{ color: '#64748b', textDecoration: 'none' }}>Terms of Service</a>
                </div>
            </div>
        </footer>
        </body>
        </html>
    );
}